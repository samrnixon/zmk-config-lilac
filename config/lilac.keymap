/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>

#define default_layer 0
#define numLayer  1
#define codeLayer  2

/ {
        keymap {
                compatible = "zmk,keymap";

                default_layer {
// -----------------------------------------------------------------------------------------
// |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BSPC |
// | CAPS |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  | ENTER|
// | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  B  |  N  |  M   |  ,  |  .  | SHIFT|
//              |MUTE |LCTRL| WIN |SPACE|   |layerA| codeLayer  | RALT| MUTE|

                        bindings = <
   &kp TAB   &kp Q &kp W &kp E &kp R &kp T              &kp Y &kp U  &kp I &kp O  &kp P    &kp BSPC
   &kp CLCK &kp A &kp S &kp D &kp F &kp G               &kp H &kp J  &kp K  &kp L  &kp SEMI &kp ENTER
   &kp LSHFT &kp Z &kp X &kp C &kp V &kp B              &kp B &kp N &kp M  &kp COMMA &kp DOT &kp RSHFT
   &kp C_MUTE &kp LCTRL &kp LWIN &kp SPACE              &mo numLayer &mo codeLayer &kp RALT &kp C_MUTE
                        >;

                        sensor-bindings = <&inc_dec_kp C_VOL_DN C_VOL_UP>;
                };

                num_layer {
                        label = "numLayer";
// -----------------------------------------------------------------------------------------
// |  Esc |    ! |   @    |  #     |    $   |   %    |          |  ^    |   &   |   *     |   -   |   +    |      |
// |  btMain   |   1   |   2    |    3   |     4  |   5    |          |   DEL |       |   UP    |      |       | Enter|
// |  btSec   |   6   |   7    |    8   |   9    |   0    |          |       |  LEFT |   DOWN  |RIGHT |       |      |
// |  X  |   X   |        |        |        |        |          |       |       |         |     |   X   |   X   |

                        bindings = <
&kp Esc   &kp EXCL   &kp AT   &kp HASH   &kp DLLR   &kp PRCNT   &kp CARET   &kp AMPS &kp STAR   &kp MINUS   &kp PLUS   &trans  
&bt BT_SEL 0   &kp N1   &kp N2   &kp N3   &kp N4   &kp N5             &kp DEL   &trans   &kp UP   &trans   &trans   &kp ENTER   
&bt BT_SEL 1   &kp N6   &kp N7   &kp N8   &kp N9   &kp N0             &trans   &kp LEFT   &kp DOWN   &kp RIGHT   &trans   &trans   
                &trans   &trans   &trans   &trans               &trans   &trans   &trans   &trans   
                        >;

                        sensor-bindings = <&inc_dec_kp C_VOL_DN C_VOL_UP>;
                };

                code_layer {
                        label = "codeLayer";
// -----------------------------------------------------------------------------------------
// |    |       |       |       |       |       |               |       |    (   |   )    |       |       |     
// |    |       |       |       |       |       |               |       |    {   |   }    |   \    |   "|"    |   '  |
// |    |       |       |       |       |       |               |       |   [    |   ]    |   /   |    EQL   |     |
// |  X |   X   |       |       |       |       |               |       |        |        |       |  X    |  X  |
                        bindings = <
&trans   &trans   &trans   &trans   &trans   &trans                &trans   &kp LPAR &kp RPAR   &trans   &trans   &trans   
&trans   &trans   &trans   &trans   &trans   &trans                &trans   &kp LBRC   &kp RBRC   &kp BSLH   &kp PIPE   &trans   
&trans   &trans   &trans   &trans   &trans   &trans                &trans   &kp LBKT &kp RBKT   &kp FSLH   &kp EQUAL   &trans   
                  &trans   &trans   &trans   &trans                &trans   &trans   &trans   &trans   
                        >;

                        sensor-bindings = <&inc_dec_kp C_VOL_DN C_VOL_UP>;
                };
        };
};
